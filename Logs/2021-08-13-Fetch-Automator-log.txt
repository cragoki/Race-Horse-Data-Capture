{ "time": "2021-08-13 10:18:02.5594", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 10:18:02.5847", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 10:18:02.8678", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 10:18:02.8678", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 10:18:02.8879", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:19:21.6128", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "                Batch Initialized with Identifier 00000000-0000-0000-0000-000000000000          " }
{ "time": "2021-08-13 11:19:21.6414", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 11:19:21.7799", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 11:19:21.7853", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 11:19:21.8082", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:19:42.4616", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 11:19:43.0394", "level": "ERROR", "message": "An error occurred using the connection to database 'RHDC' on server 'tcp:localhost'.", "database": "RHDC", "server": "tcp:localhost", "EventId_Id": 20004, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError", "EventId": "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError" }
{ "time": "2021-08-13 11:19:43.0728", "level": "ERROR", "message": "An exception occurred while iterating over the results of a query for context type 'Infrastructure.Data.DbContextData'.\r\nMicrosoft.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(DbContext _, Boolean result)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:f4539ca2-d703-4582-b358-6b41249f616e\r\nError Number:18456,State:1,Class:14", "contextType": "Infrastructure.Data.DbContextData", "newline": "\r\n", "error": "Microsoft.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(DbContext _, Boolean result)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:f4539ca2-d703-4582-b358-6b41249f616e\r\nError Number:18456,State:1,Class:14", "EventId_Id": 10100, "EventId_Name": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed", "EventId": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2021-08-13 11:19:43.2563", "level": "ERROR", "message": "!!! Error attempting to store course Wolverhampton.. Login failed for user 'sa'. !!!" }
{ "time": "2021-08-13 11:20:00.7040", "level": "ERROR", "message": "An error occurred using the connection to database 'RHDC' on server 'tcp:localhost'.", "database": "RHDC", "server": "tcp:localhost", "EventId_Id": 20004, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError", "EventId": "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError" }
{ "time": "2021-08-13 11:20:00.7199", "level": "ERROR", "message": "An exception occurred while iterating over the results of a query for context type 'Infrastructure.Data.DbContextData'.\r\nMicrosoft.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(DbContext _, Boolean result)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:70875a0b-5364-4038-b927-daa055eadc76\r\nError Number:18456,State:1,Class:14", "contextType": "Infrastructure.Data.DbContextData", "newline": "\r\n", "error": "Microsoft.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(DbContext _, Boolean result)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:70875a0b-5364-4038-b927-daa055eadc76\r\nError Number:18456,State:1,Class:14", "EventId_Id": 10100, "EventId_Name": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed", "EventId": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2021-08-13 11:20:00.8437", "level": "ERROR", "message": "!!! Error attempting to store course Newbury.. Login failed for user 'sa'. !!!" }
{ "time": "2021-08-13 11:22:58.5157", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "                Batch Initialized with Identifier 00000000-0000-0000-0000-000000000000          " }
{ "time": "2021-08-13 11:22:58.5391", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 11:22:58.6747", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 11:22:58.6747", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 11:22:58.7051", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:23:05.9318", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 11:23:06.3015", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:23:39.3183", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:24.0821", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:25.2572", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:26.1718", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:26.8943", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:27.6181", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:24:28.6257", "level": "INFO", "message": "7 Events Retrieved and stored successfully." }
{ "time": "2021-08-13 11:24:28.6257", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6444", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6444", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6612", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6612", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6780", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6780", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:24:28.6945", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:24:28.7418", "level": "INFO", "message": "{\"Automator\":0,\"TimeInitialized\":\"2021-08-13T11:22:58.5433286+02:00\",\"TimeCompleted\":\"2021-08-13T11:24:28.6992283+02:00\",\"EventsFiltered\":7,\"ErrorsEncountered\":0,\"EllapsedTime\":90.1558997}" }
{ "time": "2021-08-13 11:24:28.7418", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:24:28.7418", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:24:28.7589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:24:28.7589", "level": "INFO", "message": "-----------------------------------Automator Terminating-----------------------------------------" }
{ "time": "2021-08-13 11:24:28.7589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:24:28.7589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:24:28.7589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1662", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "                Batch Initialized with Identifier 00000000-0000-0000-0000-000000000000          " }
{ "time": "2021-08-13 11:26:55.1894", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 11:26:55.3152", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 11:26:55.3152", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 11:26:55.3152", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:27:06.5799", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 11:27:06.9500", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:29:22.0335", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0589", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 11:29:22.0589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0589", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0627", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:29:22.0627", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 11:29:22.0627", "level": "INFO", "message": "                Batch Initialized with Identifier 00000000-0000-0000-0000-000000000000          " }
{ "time": "2021-08-13 11:29:22.0627", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 11:29:22.2020", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 11:29:22.2057", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 11:29:22.2057", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:29:28.9218", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 11:29:29.2930", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:29:29.4403", "level": "INFO", "message": "Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "16", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:29:38.9114", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "3", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5076", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5251", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5382", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5589", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5762", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.5919", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6068", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6186", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6186", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6361", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6497", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6497", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6612", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6612", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6612", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6830", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6830", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6911", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:30:08.6911", "level": "INFO", "message": "7 Events Retrieved and stored successfully." }
{ "time": "2021-08-13 11:30:08.6911", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.6911", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.6911", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:30:08.7071", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:30:08.7599", "level": "INFO", "message": "{\"Automator\":0,\"TimeInitialized\":\"2021-08-13T11:29:22.064986+02:00\",\"TimeCompleted\":\"2021-08-13T11:30:08.7168775+02:00\",\"EventsFiltered\":7,\"ErrorsEncountered\":0,\"EllapsedTime\":46.6518915}" }
{ "time": "2021-08-13 11:30:08.7599", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:30:08.7599", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:30:08.7738", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:30:08.7738", "level": "INFO", "message": "-----------------------------------Automator Terminating-----------------------------------------" }
{ "time": "2021-08-13 11:30:08.7738", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:30:08.7738", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:30:08.7738", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3356", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "                Batch Initialized with Identifier facd5139-ba02-4fe9-b23c-f50f03ca56fe          " }
{ "time": "2021-08-13 11:33:02.3600", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 11:33:02.4961", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 11:33:02.4961", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 11:33:02.5051", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 11:33:13.4208", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 11:33:13.7880", "level": "INFO", "message": "Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "17", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:13.9309", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "14", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:13.9974", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.0436", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.0642", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.0793", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1008", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1119", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1119", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "1", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1438", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1438", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1615", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1721", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1721", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1721", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1967", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.1967", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.2059", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.2252", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.2252", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.2252", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 11:33:14.2433", "level": "INFO", "message": "7 Events Retrieved and stored successfully." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 11:33:14.2535", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 11:33:14.3072", "level": "INFO", "message": "{\"Automator\":0,\"TimeInitialized\":\"2021-08-13T11:33:02.3658379+02:00\",\"TimeCompleted\":\"2021-08-13T11:33:14.2653674+02:00\",\"EventsFiltered\":7,\"ErrorsEncountered\":0,\"EllapsedTime\":11.8995295}" }
{ "time": "2021-08-13 11:33:14.3072", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:14.3072", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:14.3199", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:14.3199", "level": "INFO", "message": "-----------------------------------Automator Terminating-----------------------------------------" }
{ "time": "2021-08-13 11:33:14.3199", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:14.3199", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 11:33:14.3199", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1689", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "                Batch Initialized with Identifier c00f2e56-5d1d-4e26-8546-463024d00dfe          " }
{ "time": "2021-08-13 14:54:43.1931", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 14:54:43.3186", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 14:54:43.3186", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 14:54:43.3302", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 14:54:44.2757", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 14:54:44.6576", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.8078", "level": "INFO", "message": "Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "16", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.8769", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "3", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9159", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9159", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9359", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9470", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9470", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9702", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9702", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9702", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:44.9702", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0000", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0059", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0059", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0268", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0268", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0346", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0538", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0538", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0627", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:54:45.0627", "level": "INFO", "message": "7 Events Retrieved and stored successfully." }
{ "time": "2021-08-13 14:54:45.0627", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0627", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0881", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0946", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0946", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.0946", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:54:45.0946", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:54:45.1542", "level": "INFO", "message": "{\"Automator\":0,\"TimeInitialized\":\"2021-08-13T14:54:43.1978196+02:00\",\"TimeCompleted\":\"2021-08-13T14:54:45.097543+02:00\",\"EventsFiltered\":7,\"ErrorsEncountered\":0,\"EllapsedTime\":1.8997234}" }
{ "time": "2021-08-13 14:54:45.1542", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-----------------------------------Automator Terminating-----------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:54:45.1583", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3158", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "------------------------------------Fetch Automator Inilializing---------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "                                                                                                 " }
{ "time": "2021-08-13 14:55:47.3392", "level": "INFO", "message": "                Batch Initialized with Identifier 927ab4bc-c077-4314-b44e-b3f2bbb3e93b          " }
{ "time": "2021-08-13 14:55:47.3444", "level": "INFO", "message": "Fetching Todays Events." }
{ "time": "2021-08-13 14:55:47.4668", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2021-08-13 14:55:47.4717", "level": "INFO", "message": "Hosting environment: Production", "envName": "Production" }
{ "time": "2021-08-13 14:55:47.4935", "level": "INFO", "message": "Content root path: C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1", "contentRoot": "C:\\Users\\Craig\\Documents\\repo\\Prsonal\\Race-Horse-Data-Capture\\RHDCAutomation\\bin\\Debug\\netcoreapp3.1" }
{ "time": "2021-08-13 14:55:48.3185", "level": "INFO", "message": "Entity Framework Core 5.0.9 initialized 'DbContextData' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: MaxPoolSize=128 CommandTimeout=120 ", "version": "5.0.9", "contextType": "DbContextData", "provider": "Microsoft.EntityFrameworkCore.SqlServer", "options": "MaxPoolSize=128 CommandTimeout=120 ", "EventId_Id": 10403, "EventId_Name": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized", "EventId": "Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized" }
{ "time": "2021-08-13 14:55:48.6866", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.8335", "level": "INFO", "message": "Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "15", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.8981", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "2", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9333", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9493", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9637", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9762", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9883", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:48.9883", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0062", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0062", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0218", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0218", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0344", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0344", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0546", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0546", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0693", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0839", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='120']\r\nSELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SELECT [t].[course_id], [t].[all_weather], [t].[country_code], [t].[name]\r\nFROM [tb_course] AS [t]", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.0839", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32), @p1='?' (DbType = Boolean), @p2='?' (Size = 4000), @p3='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_course] ([course_id], [all_weather], [country_code], [name])\r\nVALUES (@p0, @p1, @p2, @p3);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.1034", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "elapsed": "0", "parameters": "@p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_event] ([abandoned], [batch_id], [course_id], [created], [hash_name], [meeting_type], [meeting_url], [name], [races], [surface_type])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);\r\nSELECT [event_id]\r\nFROM [tb_event]\r\nWHERE @@ROWCOUNT = 1 AND [event_id] = scope_identity();", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.1034", "level": "INFO", "message": "7 Events Retrieved and stored successfully." }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1099", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1258", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1258", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1258", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1258", "level": "INFO", "message": "Fetching Races for event eventName - 8\/13\/2021 12:00:00 AM." }
{ "time": "2021-08-13 14:55:49.1258", "level": "INFO", "message": "Races Retrieved for event eventName - 8\/13\/2021 12:00:00 AM" }
{ "time": "2021-08-13 14:55:49.1861", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='120']\r\nSET NOCOUNT ON;\r\nINSERT INTO [tb_batch] ([batch_id], [date], [diagnostics])\r\nVALUES (@p0, @p1, @p2);", "elapsed": "1", "parameters": "@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 120, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nINSERT INTO [tb_batch] ([batch_id], [date], [diagnostics])\r\nVALUES (@p0, @p1, @p2);", "EventId_Id": 20101, "EventId_Name": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted", "EventId": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "{\"Automator\":0,\"TimeInitialized\":\"2021-08-13T14:55:47.3434273+02:00\",\"TimeCompleted\":\"2021-08-13T14:55:49.1296615+02:00\",\"EventsFiltered\":7,\"ErrorsEncountered\":0,\"EllapsedTime\":1.7862342}" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-----------------------------------Automator Terminating-----------------------------------------" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:49.1982", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
{ "time": "2021-08-13 14:55:49.2037", "level": "INFO", "message": "-------------------------------------------------------------------------------------------------" }
